version: "3.8"

services:
  # Firebase Emulator Suite (for development)
  firebase-emulator:
    image: node:18-alpine
    container_name: adgenius_firebase_emulator
    restart: unless-stopped
    working_dir: /app
    command: >
      sh -c "
        npm install -g firebase-tools &&
        firebase emulators:start --project adgenius-demo-project --only firestore,auth
      "
    environment:
      - FIREBASE_PROJECT_ID=adgenius-demo-project
    ports:
      - "4000:4000" # Firebase Emulator UI
      - "8080:8080" # Firestore Emulator
      - "9099:9099" # Auth Emulator
    volumes:
      - ./firebase.json:/app/firebase.json:ro
      - firebase_data:/app/firebase-data
    networks:
      - adgenius_network

  # Redis Cache
  redis:
    image: redis:8-alpine
    container_name: adgenius_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - adgenius_network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: adgenius_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - adgenius_network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: adgenius_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - adgenius_network

  # Go API Gateway (with Firebase Firestore)
  go-api-gateway:
    build:
      context: ./services/go-api-gateway
      dockerfile: Dockerfile
    container_name: adgenius_go_api_gateway
    restart: unless-stopped
    environment:
      # Application Configuration
      GIN_MODE: debug
      PORT: 8000
      LOG_LEVEL: info

      # Firebase Configuration
      FIREBASE_PROJECT_ID: adgenius-demo-project
      FIRESTORE_EMULATOR_HOST: firebase-emulator:8080

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_TLS: false

      # AI Engine gRPC Configuration
      AI_ENGINE_ADDRESS: python-ai-engine:50051
      AI_ENGINE_TIMEOUT: 30s
    ports:
      - "8000:8000"
    depends_on:
      - firebase-emulator
      - redis
      - python-ai-engine
    volumes:
      - ./services/go-api-gateway/.env:/app/.env:ro
    networks:
      - adgenius_network

  # Python AI Engine (with Firebase Firestore)
  python-ai-engine:
    build:
      context: ./services/python-ai-engine
      dockerfile: Dockerfile
    container_name: adgenius_python_ai_engine
    restart: unless-stopped
    environment:
      # gRPC Server Configuration
      GRPC_PORT: 50051
      GRPC_MAX_WORKERS: 10

      # Firebase Configuration
      FIREBASE_PROJECT_ID: adgenius-demo-project
      FIRESTORE_EMULATOR_HOST: firebase-emulator:8080

      # LLM API Keys (set in .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}

      # Redis Configuration
      REDIS_URL: redis://redis:6379/1

      # Qdrant Configuration
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333

      # Observability
      LOG_LEVEL: INFO
      LOG_FORMAT: json
    ports:
      - "50051:50051"
    depends_on:
      - firebase-emulator
      - redis
      - qdrant
    volumes:
      - ./services/python-ai-engine/.env:/app/.env:ro
    networks:
      - adgenius_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: adgenius_frontend
    restart: unless-stopped
    environment:
      # Firebase Configuration
      VITE_FIREBASE_PROJECT_ID: adgenius-demo-project
      VITE_FIREBASE_AUTH_EMULATOR_HOST: localhost:9099
      VITE_FIRESTORE_EMULATOR_HOST: localhost:8080

      # API Configuration
      VITE_API_BASE_URL: http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - go-api-gateway
      - firebase-emulator
    volumes:
      - ./frontend/.env.local:/app/.env.local:ro
    networks:
      - adgenius_network

volumes:
  firebase_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  adgenius_network:
    driver: bridge
    name: adgenius_network
