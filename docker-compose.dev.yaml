services:
  # Qdrant Vector Database (for AI embeddings)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: adgenius_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - adgenius_network

  # Python AI Engine Service (Development)
  python-ai-engine:
    build:
      context: ./services/python-ai-engine
      dockerfile: Dockerfile
    container_name: adgenius_python_ai_engine
    restart: unless-stopped
    environment:
      # gRPC Server Configuration
      GRPC_PORT: 50051
      GRPC_MAX_WORKERS: 10

      # Firebase Configuration (Production - using real Firebase)
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID:-ceaseradvtgenerator}
      FIREBASE_DATABASE_ID: ${FIREBASE_DATABASE_ID:-ceaseradvtgenie-dev}
      GOOGLE_APPLICATION_CREDENTIALS: /app/firebase/service-account.json
      # No emulator host for production Firebase

      # LLM API Keys (set in .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}

      # Video Generation Provider API Keys (Optional)
      RUNWAY_API_KEY: ${RUNWAY_API_KEY:-}
      PIKA_API_KEY: ${PIKA_API_KEY:-}
      STABILITY_API_KEY: ${STABILITY_API_KEY:-}
      LUMA_API_KEY: ${LUMA_API_KEY:-}

      # AWS S3 Configuration for video storage
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-ceaser-advt-genius-videos}
      S3_VIDEO_PREFIX: ${S3_VIDEO_PREFIX:-videos}

      # Redis Configuration (remote Redis)
      REDIS_URL: ${REDIS_URL:-redis://localhost:6379/1}

      # Qdrant Configuration
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333

      # Development Settings
      LOG_LEVEL: DEBUG
      LOG_FORMAT: json
      PYTHONDONTWRITEBYTECODE: 1
    ports:
      - "50051:50051"
    volumes:
      - ./services/python-ai-engine:/app
      - ./services/python-ai-engine/.env:/app/.env:ro
      - ./firebase/service-account.json:/app/firebase/service-account.json:ro
    depends_on:
      - qdrant
    networks:
      - adgenius_network

  # Go API Gateway Service (Development)
  go-api-gateway:
    build:
      context: ./services/go-api-gateway
      dockerfile: Dockerfile
    container_name: adgenius_go_api_gateway
    restart: unless-stopped
    environment:
      # Application Configuration
      GIN_MODE: debug
      PORT: 8080
      LOG_LEVEL: debug

      # Firebase Configuration (Production - using real Firebase)
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID:-ceaseradvtgenerator}
      FIREBASE_DATABASE_ID: ${FIREBASE_DATABASE_ID:-ceaseradvtgenie-dev}
      GOOGLE_APPLICATION_CREDENTIALS: /app/firebase/service-account.json
      FIREBASE_SERVICE_ACCOUNT_PATH: /app/firebase/service-account.json
      # No emulator host for production Firebase

      # Redis Configuration (remote Redis)
      REDIS_HOST: ${REDIS_HOST:-localhost}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_TLS: ${REDIS_TLS:-false}

      # AI Engine gRPC Configuration
      AI_ENGINE_ADDRESS: python-ai-engine:50051
      AI_ENGINE_TIMEOUT: 30s
    ports:
      - "8080:8080"
    volumes:
      - ./services/go-api-gateway:/app
      - ./services/go-api-gateway/.env:/app/.env:ro
      - ./firebase/service-account.json:/app/firebase/service-account.json:ro
    depends_on:
      - python-ai-engine
    networks:
      - adgenius_network

  # React + Vite Frontend (Development with Hot Reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: adgenius_frontend
    restart: unless-stopped
    environment:
      # API Configuration
      VITE_API_BASE_URL: "http://localhost:8080"
      VITE_GO_API_BASE_URL: "http://localhost:8080"
      VITE_DEFAULT_TENANT_ID: "acme-corp"

      # App Configuration
      VITE_APP_TITLE: "AdGenius (Development)"
      VITE_APP_DESCRIPTION: "AI-Powered Multi-Tenant Advertising Platform"
      VITE_APP_ENV: "development"

      # Firebase Configuration (Production)
      VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY:-AIzaSyBSKSmGFHqPeJHSxCjPbQeBk1p0_NYnkoE}
      VITE_FIREBASE_AUTH_DOMAIN: ${VITE_FIREBASE_AUTH_DOMAIN:-ceaseradvtgenerator.firebaseapp.com}
      VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID:-ceaseradvtgenerator}
      VITE_FIREBASE_DATABASE_ID: ${VITE_FIREBASE_DATABASE_ID:-ceaseradvtgenie-dev}
      VITE_FIREBASE_STORAGE_BUCKET: ${VITE_FIREBASE_STORAGE_BUCKET:-ceaseradvtgenerator.firebasestorage.app}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${VITE_FIREBASE_MESSAGING_SENDER_ID:-264142471895}
      VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID:-1:264142471895:web:93f12742d042c09eb2a692}
      VITE_FIREBASE_MEASUREMENT_ID: ${VITE_FIREBASE_MEASUREMENT_ID:-G-LJXQZ4GZ4T}
      VITE_USE_FIREBASE_EMULATOR: "false"

      # Development Settings
      VITE_DEV_MODE: "true"
    ports:
      - "3000:3000"
      - "3001:3001" # HMR port
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
      - ./firebase:/app/firebase:ro
    depends_on:
      - go-api-gateway
    networks:
      - adgenius_network
    command: npm run dev -- --host 0.0.0.0

  # Development Tools - Jaeger for Observability
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: adgenius_jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - adgenius_network

# Named volumes for data persistence
volumes:
  qdrant_data:
    driver: local

# Custom network
networks:
  adgenius_network:
    driver: bridge
    name: adgenius_dev_network
