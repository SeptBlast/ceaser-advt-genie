# Generated by Django 4.2.23 on 2025-08-02 00:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address (used for login)",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(help_text="First name", max_length=150),
                ),
                ("last_name", models.CharField(help_text="Last name", max_length=150)),
                (
                    "is_email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the user's email has been verified",
                    ),
                ),
                (
                    "email_verification_token",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Token used for email verification",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, help_text="Phone number", max_length=20
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="User avatar image",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", help_text="User's timezone", max_length=50
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("zh", "Chinese"),
                        ],
                        default="en",
                        help_text="Preferred language",
                        max_length=10,
                    ),
                ),
                (
                    "preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="User preferences and settings",
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of last login", null=True
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of failed login attempts"
                    ),
                ),
                (
                    "account_locked_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="Account locked until this timestamp",
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["email"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        help_text="Django session key", max_length=40, unique=True
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(help_text="IP address of the session"),
                ),
                ("user_agent", models.TextField(help_text="User agent string")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the session is active"
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, help_text="Last activity timestamp"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="Session expiration timestamp"),
                ),
                (
                    "device_info",
                    models.JSONField(
                        blank=True, default=dict, help_text="Parsed device information"
                    ),
                ),
                (
                    "location_info",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Geolocation information (if available)",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Session",
                "verbose_name_plural": "User Sessions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="Short bio/description", max_length=500
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, help_text="Company name", max_length=255
                    ),
                ),
                (
                    "job_title",
                    models.CharField(blank=True, help_text="Job title", max_length=255),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("technology", "Technology"),
                            ("healthcare", "Healthcare"),
                            ("finance", "Finance"),
                            ("education", "Education"),
                            ("retail", "Retail"),
                            ("manufacturing", "Manufacturing"),
                            ("real_estate", "Real Estate"),
                            ("automotive", "Automotive"),
                            ("entertainment", "Entertainment"),
                            ("food_beverage", "Food & Beverage"),
                            ("travel", "Travel & Tourism"),
                            ("non_profit", "Non-profit"),
                            ("government", "Government"),
                            ("other", "Other"),
                        ],
                        help_text="Industry",
                        max_length=100,
                    ),
                ),
                (
                    "company_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1-10", "1-10 employees"),
                            ("11-50", "11-50 employees"),
                            ("51-200", "51-200 employees"),
                            ("201-500", "201-500 employees"),
                            ("501-1000", "501-1000 employees"),
                            ("1000+", "1000+ employees"),
                        ],
                        help_text="Company size",
                        max_length=50,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Company or personal website"
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(blank=True, help_text="LinkedIn profile URL"),
                ),
                (
                    "twitter_handle",
                    models.CharField(
                        blank=True,
                        help_text="Twitter handle (without @)",
                        max_length=50,
                    ),
                ),
                (
                    "marketing_consent",
                    models.BooleanField(
                        default=False,
                        help_text="Consent to receive marketing communications",
                    ),
                ),
                (
                    "analytics_consent",
                    models.BooleanField(
                        default=True, help_text="Consent to analytics tracking"
                    ),
                ),
                (
                    "onboarding_completed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the user has completed onboarding",
                    ),
                ),
                (
                    "onboarding_step",
                    models.CharField(
                        blank=True, help_text="Current onboarding step", max_length=50
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
    ]
